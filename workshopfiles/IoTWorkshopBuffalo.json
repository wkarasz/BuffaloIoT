{
    "imports": [
        "github.com/project-flogo/flow",
        "git.tibco.com/git/product/ipaas/wi-contrib.git/contributions/General/activity/rest",
        "git.tibco.com/git/product/ipaas/wi-contrib.git/contributions/General/activity/mapper",
        "git.tibco.com/git/product/ipaas/wi-contrib.git/contributions/General/activity/log",
        "git.tibco.com/git/product/ipaas/wi-plugins.git/contributions/Messaging/activity/tcmpublisher",
        "github.com/project-flogo/contrib/activity/actreturn",
        "git.tibco.com/git/product/ipaas/wi-contrib.git/contributions/General/trigger/timer",
        "github.com/project-flogo/contrib/function/coerce",
        "github.com/project-flogo/contrib/function/utils",
        "github.com/project-flogo/contrib/function/string",
        "github.com/project-flogo/contrib/function/array",
        "git.tibco.com/git/product/ipaas/wi-contrib.git/function/utility"
    ],
    "name": "IotWorkshopBuffalo",
    "description": " ",
    "version": "1.1.0",
    "type": "flogo:app",
    "appModel": "1.1.1",
    "feVersion": "2.7.0",
    "triggers": [
        {
            "ref": "#timer",
            "name": "tibco-wi-timer",
            "description": "Simple Timer trigger",
            "settings": {},
            "id": "TimerTrigger",
            "handlers": [
                {
                    "description": "",
                    "settings": {
                        "Repeating": true,
                        "Start Date": "",
                        "Time Interval": 1,
                        "Interval Unit": "Second"
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:AcquireSensorData"
                        }
                    }
                }
            ]
        }
    ],
    "resources": [
        {
            "id": "flow:AcquireSensorData",
            "data": {
                "name": "AcquireSensorData",
                "description": "",
                "links": [
                    {
                        "id": 1,
                        "from": "InvokeRESTService",
                        "to": "MapResponse",
                        "type": "default"
                    },
                    {
                        "id": 2,
                        "from": "MapResponse",
                        "to": "Mapper",
                        "type": "default"
                    },
                    {
                        "id": 3,
                        "from": "Mapper",
                        "to": "LogMessage",
                        "type": "default"
                    },
                    {
                        "id": 4,
                        "from": "LogMessage",
                        "to": "TCMMessagePublisher",
                        "type": "default"
                    },
                    {
                        "id": 5,
                        "from": "TCMMessagePublisher",
                        "to": "Return",
                        "type": "default"
                    }
                ],
                "tasks": [
                    {
                        "id": "InvokeRESTService",
                        "name": "InvokeRESTService",
                        "description": "Call SensorTag",
                        "activity": {
                            "ref": "#rest",
                            "input": {
                                "Method": "GET",
                                "Uri": "=$property[\"Sensor.URL\"]",
                                "Timeout": 0,
                                "requestType": "application/json",
                                "Use certificate for verification": false,
                                "Server Certificate": "",
                                "headers": {
                                    "mapping": {
                                        "Accept": "text/html"
                                    }
                                }
                            },
                            "output": {
                                "configureResponseCodes": false,
                                "responseType": "application/json"
                            },
                            "schemas": {
                                "input": {
                                    "headers": {
                                        "type": "json",
                                        "value": "{\"type\":\"object\",\"properties\":{\"Accept\":{\"type\":\"string\",\"visible\":false},\"Accept-Charset\":{\"type\":\"string\",\"visible\":false},\"Accept-Encoding\":{\"type\":\"string\",\"visible\":false},\"Content-Type\":{\"type\":\"string\",\"visible\":false},\"Content-Length\":{\"type\":\"string\",\"visible\":false},\"Connection\":{\"type\":\"string\",\"visible\":false},\"Cookie\":{\"type\":\"string\",\"visible\":false},\"Pragma\":{\"type\":\"string\",\"visible\":false}},\"required\":[]}",
                                        "fe_metadata": "[{\"parameterName\":\"Accept\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Charset\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Encoding\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Type\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Length\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Connection\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Cookie\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Pragma\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false}]"
                                    }
                                },
                                "output": {
                                    "responseBody": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"data\":{\"type\":\"string\"}}}",
                                        "fe_metadata": "{\n    \"data\":\"string\"\n}"
                                    },
                                    "headers": {
                                        "type": "json",
                                        "value": "{\"type\":\"object\",\"properties\":{\"Accept\":{\"type\":\"string\",\"visible\":false},\"Accept-Charset\":{\"type\":\"string\",\"visible\":false},\"Accept-Encoding\":{\"type\":\"string\",\"visible\":false},\"Content-Type\":{\"type\":\"string\",\"visible\":false},\"Content-Length\":{\"type\":\"string\",\"visible\":false},\"Connection\":{\"type\":\"string\",\"visible\":false},\"Cookie\":{\"type\":\"string\",\"visible\":false},\"Pragma\":{\"type\":\"string\",\"visible\":false}},\"required\":[]}",
                                        "fe_metadata": "[{\"parameterName\":\"Accept\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Charset\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Encoding\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Type\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Length\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Connection\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Cookie\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Pragma\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false}]"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "MapResponse",
                        "name": "MapResponse",
                        "description": "Mapper Activity",
                        "activity": {
                            "ref": "#mapper",
                            "input": {
                                "input": {
                                    "mapping": {
                                        "temp": "=string.substringBefore(string.substringAfter(utils.decodeBase64(coerce.toString($activity[InvokeRESTService].responseBody.data)),'<p id=\"tmp\">'),'</p>')",
                                        "humidity": "=string.substringBefore(string.substringAfter(utils.decodeBase64(coerce.toString($activity[InvokeRESTService].responseBody.data)),'<p id=\"hum\">'),'</p>')",
                                        "pressure": "=string.substringBefore(string.substringAfter(utils.decodeBase64(coerce.toString($activity[InvokeRESTService].responseBody.data)),'<p id=\"bar\">'),'</p>')",
                                        "gyro": "=string.substringBefore(string.substringAfter(utils.decodeBase64(coerce.toString($activity[InvokeRESTService].responseBody.data)),'<p id=\"gyr\">'),'</p>')",
                                        "accel": "=string.substringBefore(string.substringAfter(utils.decodeBase64(coerce.toString($activity[InvokeRESTService].responseBody.data)),'<p id=\"acc\">'),'</p>')",
                                        "light": "=string.substringBefore(string.substringAfter(utils.decodeBase64(coerce.toString($activity[InvokeRESTService].responseBody.data)),'<p id=\"opt\">'),'</p>')",
                                        "mag": "=string.substringBefore(string.substringAfter(utils.decodeBase64(coerce.toString($activity[InvokeRESTService].responseBody.data)),'<p id=\"mag\">'),'</p>')",
                                        "uptime": "=string.substringBefore(string.substringAfter(utils.decodeBase64(coerce.toString($activity[InvokeRESTService].responseBody.data)),'<p id=\"syn\">'),'</p>')",
                                        "key": "=$property[\"Sensor.ID\"]"
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"temp\":{\"type\":\"string\"},\"humidity\":{\"type\":\"string\"},\"pressure\":{\"type\":\"string\"},\"gyro\":{\"type\":\"string\"},\"accel\":{\"type\":\"string\"},\"light\":{\"type\":\"string\"},\"mag\":{\"type\":\"string\"},\"key\":{\"type\":\"string\"},\"uptime\":{\"type\":\"string\"}}}",
                                        "fe_metadata": "{\n    \"temp\":\"value\",\n    \"humidity\":\"value\",\n    \"pressure\":\"value\",\n    \"gyro\":\"value\",\n    \"accel\":\"value\",\n    \"light\":\"value\",\n    \"mag\":\"value\",\n    \"key\":\"value\",\n    \"uptime\":\"value\"\n}"
                                    }
                                },
                                "output": {
                                    "output": {
                                        "type": "json",
                                        "value": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"temp\": {\n      \"type\": \"string\"\n    },\n    \"humidity\": {\n      \"type\": \"string\"\n    },\n    \"pressure\": {\n      \"type\": \"string\"\n    },\n    \"gyro\": {\n      \"type\": \"string\"\n    },\n    \"accel\": {\n      \"type\": \"string\"\n    },\n    \"light\": {\n      \"type\": \"string\"\n    },\n    \"mag\": {\n      \"type\": \"string\"\n    },\n    \"key\": {\n      \"type\": \"string\"\n    },\n    \"uptime\": {\n      \"type\": \"string\"\n    }\n  }\n}",
                                        "fe_metadata": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"temp\": {\n      \"type\": \"string\"\n    },\n    \"humidity\": {\n      \"type\": \"string\"\n    },\n    \"pressure\": {\n      \"type\": \"string\"\n    },\n    \"gyro\": {\n      \"type\": \"string\"\n    },\n    \"accel\": {\n      \"type\": \"string\"\n    },\n    \"light\": {\n      \"type\": \"string\"\n    },\n    \"mag\": {\n      \"type\": \"string\"\n    },\n    \"key\": {\n      \"type\": \"string\"\n    },\n    \"uptime\": {\n      \"type\": \"string\"\n    }\n  }\n}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "Mapper",
                        "name": "Mapper",
                        "description": "Mapper Activity",
                        "activity": {
                            "ref": "#mapper",
                            "input": {
                                "input": {
                                    "mapping": {
                                        "temperature": "=array.get(string.split($activity[MapResponse].output.temp,\" \"),3)",
                                        "humidity": "=array.get(string.split($activity[MapResponse].output.humidity,\" \"),2)",
                                        "pressure": "=array.get(string.split($activity[MapResponse].output.pressure,\" \"),3)",
                                        "gyro_x": "=array.get(string.split($activity[MapResponse].output.gyro,\" \"),3)",
                                        "gyro_y": "=array.get(string.split($activity[MapResponse].output.gyro,\" \"),4)",
                                        "gyro_z": "=array.get(string.split($activity[MapResponse].output.gyro,\" \"),5)",
                                        "accel_x": "=array.get(string.split($activity[MapResponse].output.accel,\" \"),3)",
                                        "accel_y": "=array.get(string.split($activity[MapResponse].output.accel,\" \"),4)",
                                        "accel_z": "=array.get(string.split($activity[MapResponse].output.accel,\" \"),5)",
                                        "light": "=array.get(string.split($activity[MapResponse].output.light,\" \"),1)",
                                        "mag_x": "=array.get(string.split($activity[MapResponse].output.mag,\" \"),3)",
                                        "mag_y": "=array.get(string.split($activity[MapResponse].output.mag,\" \"),4)",
                                        "mag_z": "=array.get(string.split($activity[MapResponse].output.mag,\" \"),3)",
                                        "key": "=$activity[MapResponse].output.key",
                                        "uptime": "=$activity[MapResponse].output.uptime"
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"temperature\":{\"type\":\"string\"},\"humidity\":{\"type\":\"string\"},\"pressure\":{\"type\":\"string\"},\"gyro_x\":{\"type\":\"string\"},\"gyro_y\":{\"type\":\"string\"},\"gyro_z\":{\"type\":\"string\"},\"accel_x\":{\"type\":\"string\"},\"accel_y\":{\"type\":\"string\"},\"accel_z\":{\"type\":\"string\"},\"light\":{\"type\":\"string\"},\"mag_x\":{\"type\":\"string\"},\"mag_y\":{\"type\":\"string\"},\"mag_z\":{\"type\":\"string\"},\"key\":{\"type\":\"string\"},\"uptime\":{\"type\":\"string\"}}}",
                                        "fe_metadata": "{\n    \"temperature\":\"value\",\n    \"humidity\":\"value\",\n    \"pressure\":\"value\",\n    \"gyro_x\":\"value\",\n    \"gyro_y\":\"value\",\n    \"gyro_z\":\"value\",\n    \"accel_x\":\"value\",\n    \"accel_y\":\"value\",\n    \"accel_z\":\"value\",\n    \"light\":\"value\",\n    \"mag_x\":\"value\",\n    \"mag_y\":\"value\",\n    \"mag_z\":\"value\",\n    \"key\":\"value\",\n    \"uptime\":\"value\"\n}"
                                    }
                                },
                                "output": {
                                    "output": {
                                        "type": "json",
                                        "value": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"temperature\": {\n      \"type\": \"string\"\n    },\n    \"humidity\": {\n      \"type\": \"string\"\n    },\n    \"pressure\": {\n      \"type\": \"string\"\n    },\n    \"gyro_x\": {\n      \"type\": \"string\"\n    },\n    \"gyro_y\": {\n      \"type\": \"string\"\n    },\n    \"gyro_z\": {\n      \"type\": \"string\"\n    },\n    \"accel_x\": {\n      \"type\": \"string\"\n    },\n    \"accel_y\": {\n      \"type\": \"string\"\n    },\n    \"accel_z\": {\n      \"type\": \"string\"\n    },\n    \"light\": {\n      \"type\": \"string\"\n    },\n    \"mag_x\": {\n      \"type\": \"string\"\n    },\n    \"mag_y\": {\n      \"type\": \"string\"\n    },\n    \"mag_z\": {\n      \"type\": \"string\"\n    },\n    \"key\": {\n      \"type\": \"string\"\n    },\n    \"uptime\": {\n      \"type\": \"string\"\n    }\n  }\n}",
                                        "fe_metadata": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"temperature\": {\n      \"type\": \"string\"\n    },\n    \"humidity\": {\n      \"type\": \"string\"\n    },\n    \"pressure\": {\n      \"type\": \"string\"\n    },\n    \"gyro_x\": {\n      \"type\": \"string\"\n    },\n    \"gyro_y\": {\n      \"type\": \"string\"\n    },\n    \"gyro_z\": {\n      \"type\": \"string\"\n    },\n    \"accel_x\": {\n      \"type\": \"string\"\n    },\n    \"accel_y\": {\n      \"type\": \"string\"\n    },\n    \"accel_z\": {\n      \"type\": \"string\"\n    },\n    \"light\": {\n      \"type\": \"string\"\n    },\n    \"mag_x\": {\n      \"type\": \"string\"\n    },\n    \"mag_y\": {\n      \"type\": \"string\"\n    },\n    \"mag_z\": {\n      \"type\": \"string\"\n    },\n    \"key\": {\n      \"type\": \"string\"\n    },\n    \"uptime\": {\n      \"type\": \"string\"\n    }\n  }\n}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "LogMessage",
                        "name": "LogMessage",
                        "description": "Temperature",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "=utility.renderJSON($activity[Mapper].output, true)"
                            }
                        }
                    },
                    {
                        "id": "TCMMessagePublisher",
                        "name": "TCMMessagePublisher",
                        "description": "This activity sends a message to TIBCO Cloud Messaging service",
                        "activity": {
                            "ref": "#tcmpublisher",
                            "input": {
                                "tcmConnection": {
                                    "id": "b53c7a60-ec4c-11e9-896d-ede6669ac290",
                                    "type": "flogo:connector",
                                    "version": "1.1.0",
                                    "name": "tibco-eftl",
                                    "hashTags": [],
                                    "inputMappings": {},
                                    "outputMappings": {},
                                    "iteratorMappings": {},
                                    "title": "TIBCO Cloud Messaging Connector",
                                    "description": "This is TIBCO Cloud Messaging connector",
                                    "ref": "git.tibco.com/git/product/ipaas/wi-plugins.git/contributions/Messaging/connector/tcm",
                                    "settings": [
                                        {
                                            "name": "name",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Connection Name",
                                                "description": "Name of the connection"
                                            },
                                            "value": "TIBCO-Cloud"
                                        },
                                        {
                                            "name": "description",
                                            "type": "string",
                                            "display": {
                                                "name": "Description",
                                                "description": "Connection description"
                                            },
                                            "value": "Brian's Org"
                                        },
                                        {
                                            "name": "url",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Connection URL",
                                                "description": "TIBCO Cloud Messaging connection url",
                                                "appPropertySupport": true
                                            },
                                            "value": "=$property[\"Messaging.TIBCO-Cloud.Connection_URL\"]"
                                        },
                                        {
                                            "name": "authKey",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Authentication Key",
                                                "description": "Authentication key",
                                                "type": "password",
                                                "appPropertySupport": true
                                            },
                                            "value": "=$property[\"Messaging.TIBCO-Cloud.Authentication_Key\"]"
                                        }
                                    ],
                                    "outputs": [],
                                    "inputs": [],
                                    "handler": {
                                        "settings": []
                                    },
                                    "reply": [],
                                    "s3Prefix": "Tibco",
                                    "key": "Tibco/Messaging/connector/tcm/connector.json",
                                    "display": {
                                        "description": "This is TIBCO Cloud Messaging connector",
                                        "category": "Messaging",
                                        "visible": true,
                                        "smallIcon": "tcm.png"
                                    },
                                    "actions": [
                                        {
                                            "name": "Save",
                                            "display": {
                                                "readonly": false,
                                                "valid": true,
                                                "visible": true
                                            }
                                        }
                                    ],
                                    "feature": {},
                                    "propertyMap": {},
                                    "keyfield": "name",
                                    "isValid": true,
                                    "lastUpdatedTime": 1570814981382,
                                    "createdTime": 1570814981382,
                                    "user": "flogo",
                                    "subscriptionId": "flogo_sbsc",
                                    "connectorName": "TIBCO-Cloud",
                                    "connectorDescription": "Brian's Org"
                                },
                                "destination": "iot",
                                "url": "",
                                "authKey": "",
                                "message": {
                                    "mapping": {
                                        "temperature": "=array.get(string.split($activity[MapResponse].output.temp,\" \"),3)",
                                        "humidity": "=array.get(string.split($activity[MapResponse].output.humidity,\" \"),2)",
                                        "pressure": "=array.get(string.split($activity[MapResponse].output.pressure,\" \"),3)",
                                        "gyro_x": "=array.get(string.split($activity[MapResponse].output.gyro,\" \"),3)",
                                        "gyro_y": "=array.get(string.split($activity[MapResponse].output.gyro,\" \"),4)",
                                        "gyro_z": "=array.get(string.split($activity[MapResponse].output.gyro,\" \"),5)",
                                        "accel_x": "=array.get(string.split($activity[MapResponse].output.accel,\" \"),3)",
                                        "accel_y": "=array.get(string.split($activity[MapResponse].output.accel,\" \"),4)",
                                        "accel_z": "=array.get(string.split($activity[MapResponse].output.accel,\" \"),5)",
                                        "light": "=array.get(string.split($activity[MapResponse].output.light,\" \"),1)",
                                        "mag_x": "=array.get(string.split($activity[MapResponse].output.mag,\" \"),3)",
                                        "mag_y": "=array.get(string.split($activity[MapResponse].output.mag,\" \"),4)",
                                        "mag_z": "=array.get(string.split($activity[MapResponse].output.mag,\" \"),5)",
                                        "key": "=$activity[MapResponse].output.key",
                                        "uptime": "=$activity[MapResponse].output.uptime"
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "message": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"temperature\":{\"type\":\"string\"},\"humidity\":{\"type\":\"string\"},\"pressure\":{\"type\":\"string\"},\"gyro_x\":{\"type\":\"string\"},\"gyro_y\":{\"type\":\"string\"},\"gyro_z\":{\"type\":\"string\"},\"accel_x\":{\"type\":\"string\"},\"accel_y\":{\"type\":\"string\"},\"accel_z\":{\"type\":\"string\"},\"light\":{\"type\":\"string\"},\"mag_x\":{\"type\":\"string\"},\"mag_y\":{\"type\":\"string\"},\"mag_z\":{\"type\":\"string\"},\"key\":{\"type\":\"string\"},\"uptime\":{\"type\":\"string\"}}}",
                                        "fe_metadata": "{\n    \"temperature\":\"value\",\n    \"humidity\":\"value\",\n    \"pressure\":\"value\",\n    \"gyro_x\":\"value\",\n    \"gyro_y\":\"value\",\n    \"gyro_z\":\"value\",\n    \"accel_x\":\"value\",\n    \"accel_y\":\"value\",\n    \"accel_z\":\"value\",\n    \"light\":\"value\",\n    \"mag_x\":\"value\",\n    \"mag_y\":\"value\",\n    \"mag_z\":\"value\",\n    \"key\":\"value\",\n    \"uptime\":\"value\"\n    \n}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "Return",
                        "name": "Return",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn"
                        }
                    }
                ],
                "metadata": {
                    "input": [],
                    "output": [],
                    "fe_metadata": {}
                }
            }
        }
    ],
    "properties": [
        {
            "name": "Messaging.TIBCO-Cloud.Connection_URL",
            "type": "string",
            "value": "wss://messaging.cloud.tibco.com/tcm/01C2WD62SJSNN8TJ00GSQ7HY3S/channel"
        },
        {
            "name": "Messaging.TIBCO-Cloud.Authentication_Key",
            "type": "string",
            "value": "SECRET:O5YIP2AmZv+q/OlMnKNxk4TPGLcxYkf/A38OEWRO8ELN/5NWv3lmefGZBBQXsxJY"
        },
        {
            "name": "Sensor.URL",
            "type": "string",
            "value": "http://192.168.1.24/param_sensortag_poll.html"
        },
        {
            "name": "Sensor.ID",
            "type": "string",
            "value": "A"
        }
    ],
    "contrib": "W3sicmVmIjoiZ2l0LnRpYmNvLmNvbS9naXQvcHJvZHVjdC9pcGFhcy93aS1jb250cmliLmdpdC9jb250cmlidXRpb25zL0dlbmVyYWwiLCJzM2xvY2F0aW9uIjoiVGliY28vR2VuZXJhbCJ9LHsicmVmIjoiZ2l0LnRpYmNvLmNvbS9naXQvcHJvZHVjdC9pcGFhcy93aS1wbHVnaW5zLmdpdC9jb250cmlidXRpb25zL01lc3NhZ2luZyIsInMzbG9jYXRpb24iOiJUaWJjby9NZXNzYWdpbmcifV0=",
    "fe_metadata": "UEsDBAoAAAAIAL2adk+rqSRGFQAAABMAAAAIAAAAYXBwLmpzb26rViopykxPTy1yy8kvL1ayio6tBQBQSwECFAAKAAAACAC9mnZPq6kkRhUAAAATAAAACAAAAAAAAAAAAAAAAAAAAAAAYXBwLmpzb25QSwUGAAAAAAEAAQA2AAAAOwAAAAAA"
}